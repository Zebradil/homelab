version: "3.7"

########################### NETWORKS
networks:
  proxy:
    name: traefik-public
    driver: overlay
    ipam:
      driver: default
      config:
      - subnet: 10.1.0.0/24

########################### SERVICES
services:

############################# FRONTENDS

# Traefik 2 - Reverse Proxy
# Touch (create empty files) traefik.log and acme/acme.json. Set acme.json permissions to 600.
# touch ${SWARMDIR}/traefik2/acme/acme.json
# chmod 600 ${SWARMDIR}/traefik2/acme/acme.json
# touch ${SWARMDIR}/traefik2/traefik.log
  traefik:
    container_name: traefik
    image: traefik:chevrotin # the chevrotin tag refers to v2.2.x
    command: --configfile=traefik.yaml
    networks:
      - proxy
    ports:
      # https://www.reddit.com/r/docker/comments/c1wrep/traefik_reverse_proxy_question_docker_overlay/
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/var/data/traefik/traefik.toml:/traefik.yaml:ro"
      - "/var/data/traefik/.htpasswd:/.htpasswd:ro"
      - "/var/data/traefik/acme.json:/acme.json"
      - "/var/log/traefik:/logs"
    secrets:
      - cloudflare-api-key
      - cloudflare-api-mail
    environment:
      CF_API_KEY_FILE: /run/secrets/cloudflare-api-key
      CF_API_EMAIL_FILE: /run/secrets/cloudflare-api-mail
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: unless-stopped
      labels:
        - "traefik.enable=true"
          # HTTP Routers
        - "traefik.http.routers.traefik-rtr.entrypoints=https"
        - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.${DOMAIN:?}`)"
        - "traefik.http.routers.traefik-rtr.tls=true"
        - "traefik.http.routers.traefik-rtr.tls.domains[0].main=${DOMAIN:?}"
        - "traefik.http.routers.traefik-rtr.tls.domains[0].sans=*.${DOMAIN:?}"
          ## Services - API
        - "traefik.http.routers.traefik-rtr.service=api@internal"
          ## Middlewares
        - "traefik.http.routers.traefik-rtr.middlewares=chain-oauth@file"

## Google OAuth - Single Sign On using OAuth 2.0
#  # https://hub.docker.com/r/thomseddon/traefik-forward-auth
#  # https://www.smarthomebeginner.com/google-oauth-with-traefik-docker/
#  oauth:
#    container_name: oauth
#    image: thomseddon/traefik-forward-auth:latest
#    #image: thomseddon/traefik-forward-auth:2.1-arm # Use this image with Raspberry Pi
#    restart: unless-stopped
#    networks:
#      - proxy
#    environment:
#      - "AUTH_HOST=oauth.${DOMAIN:?}"
#      - "CLIENT_ID=${GOOGLE_CLIENT_ID}"
#      - "CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}"
#      - "COOKIE_DOMAIN=${DOMAIN:?}"
#      - "INSECURE_COOKIE=false"
#      - "LIFETIME=2592000" # 30 days
#      - "LOG_FORMAT=text"
#      - "LOG_LEVEL=info"
#      - "SECRET=${OAUTH_SECRET}"
#      - "URL_PATH=/_oauth"
#      - "WHITELIST=${MY_EMAIL}"
#    deploy:
#      # TODO global â†’ replicated?
#      mode: global
#      placement:
#        constraints: [node.role == manager]
#      restart_policy:
#        condition: unless-stopped
#      labels:
#        - "traefik.enable=true"
#        ## HTTP Routers
#        - "traefik.http.routers.oauth-rtr.entrypoints=https"
#        - "traefik.http.routers.oauth-rtr.rule=Host(`oauth.${DOMAIN:?}`)"
#        - "traefik.http.routers.oauth-rtr.tls=true"
#        ## Middlewares
#        - "traefik.http.routers.oauth-rtr.middlewares=chain-oauth@file"
#        ## HTTP Services
#        - "traefik.http.routers.oauth-rtr.service=oauth-svc"
#        - "traefik.http.services.oauth-svc.loadbalancer.server.port=4181"
#
## Portainer - WebUI for Containers
#  portainer:
#    container_name: portainer
#    image: portainer/portainer:latest
#    restart: unless-stopped
#    command: -H unix:///var/run/docker.sock
#    networks:
#      - proxy
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"
#      - "${SWARMDIR}/portainer/data:/data" # Change to local directory if you want to save/transfer config locally
#    environment:
#      - TZ=${TZ}
#    labels:
#      - "traefik.enable=true"
#      ## HTTP Routers
#      - "traefik.http.routers.portainer-rtr.entrypoints=https"
#      - "traefik.http.routers.portainer-rtr.rule=Host(`portainer.${DOMAIN:?}`)"
#      - "traefik.http.routers.portainer-rtr.tls=true"
#      ## Middlewares
#      - "traefik.http.routers.portainer-rtr.middlewares=chain-oauth@file" # Google OAuth 2.0
#      ## HTTP Services
#      - "traefik.http.routers.portainer-rtr.service=portainer-svc"
#      - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"

