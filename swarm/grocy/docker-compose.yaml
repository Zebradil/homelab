version: '3.7'

networks:
  proxy:
    name: "${NET_NAME:?}"
    external: true

services:
  grocy:
    image: linuxserver/grocy
    networks:
      - proxy
    volumes:
      - /var/data/grocy:/config
    environment:
      - "TZ=${TZ:?}"
      - "GROCY_CULTURE=${GROCY_CULTURE:-en}"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        ## HTTP Routers
        - "traefik.http.routers.grocy-rtr.priority=1"
        - "traefik.http.routers.grocy-rtr.entrypoints=https"
        - "traefik.http.routers.grocy-rtr.rule=Host(`grocy.${DOMAIN:?}`)"
        - "traefik.http.routers.grocy-rtr.tls=true"
        - "traefik.http.routers.grocy-rtr.tls.certresolver=dns-cloudflare"
        ## API
        - "traefik.http.routers.grocy-api-rtr.priority=10"
        - "traefik.http.routers.grocy-api-rtr.entrypoints=https"
        - "traefik.http.routers.grocy-api-rtr.rule=Host(`grocy.${DOMAIN:?}`) && PathPrefix(`/api`)"
        - "traefik.http.routers.grocy-api-rtr.tls=true"
        - "traefik.http.routers.grocy-api-rtr.tls.certresolver=dns-cloudflare"
        ## Middlewares
        - "traefik.http.routers.grocy-rtr.middlewares=chain-oauth@file"
        ## HTTP Services
        - "traefik.http.routers.grocy-rtr.service=grocy-svc"
        - "traefik.http.services.grocy-svc.loadbalancer.server.port=80"
